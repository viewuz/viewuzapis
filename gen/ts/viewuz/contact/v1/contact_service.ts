// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: viewuz/contact/v1/contact_service.proto

/* eslint-disable */
import { type Contact } from "./contact";

export interface CreateContactRequest {
  /** The user to create the contact */
  parent: string;
  /** The contact to create */
  contact: Contact | undefined;
}

export interface BatchCreateContactsRequest {
  /**
   * The parent resource shared by all books being created.
   * If this is set, the parent field in the CreateBookRequest messages
   * must either be empty or match this field.
   */
  parent: string;
  /**
   * The request message specifying the resources to create.
   * A maximum of 1000 contacts can be created in a batch.
   */
  requests: CreateContactRequest[];
}

export interface BatchCreateContactsResponse {
  /** Contacts created. */
  contacts: Contact[];
}

export interface ListContactsRequest {
  /** The parent, which owns this collection of contacts. */
  parent: string;
  /**
   * The maximum number of contacts to return. The service may return fewer than this value.
   * If unspecified, at most 50 will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   */
  pageSize: number;
  /**
   * A page token, received from a previous `ListBooks` call.
   * Provide this to retrieve the subsequent page.
   * When paginating, all other parameters provided to `ListContacts` must match
   * the call that provided the page token.
   */
  pageToken: string;
  /**
   * The order to list results by.
   * Values should be a comma separated list of fields
   * The default sorting order is ascending. To specify descending order for a field, users append a " desc" suffix;
   * Subfields are specified with a . character
   * Redundant space characters in the syntax are insignificant.
   * Example: `display_name desc, created_at asc`
   */
  orderBy: string;
  /**
   * The filter to apply to list results.
   * Reference: [https://google.aip.dev/160]
   */
  filter: string;
}

export interface ListContactsResponse {
  /** The contacts from the specified user. */
  contacts: Contact[];
  /**
   * A token, which can be sent as `page_token` to retrieve the next page.
   * If this field is omitted, there are no subsequent pages.
   */
  nextPageToken: string;
}

export interface ContactService {
  /** Create the contact for the user */
  createContact(request: CreateContactRequest): Promise<Contact>;
  /**
   * Batch create contact for the user
   * it's working as snyc local contacts
   */
  batchCreateContacts(request: BatchCreateContactsRequest): Promise<BatchCreateContactsResponse>;
  /** List all contacts for the user */
  listContacts(request: ListContactsRequest): Promise<ListContactsResponse>;
}
